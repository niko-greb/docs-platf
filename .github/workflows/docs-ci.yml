name: 🧱 Docs-as-Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  # ─────────────────────────────────────────────
  # 1️⃣ Проверка документации
  # ─────────────────────────────────────────────
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Build linters image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile.linters
          load: true
          tags: docs-linters:ci

      - name: 🚀 Run Docs-as-Code Validation
        run: |
          echo "🔧 Collecting changed files..."
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(adoc|ya?ml)$' || true)
          else
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '\.(adoc|ya?ml)$' || true)
          fi
          echo "$CHANGED_FILES"
          if [ -z "$CHANGED_FILES" ]; then
            echo "✅ No documentation changes detected."
            exit 0
          fi

          docker run --rm \
            -v "$PWD":/project \
            -w /project \
            -e CHANGED_FILES="$CHANGED_FILES" \
            docs-linters:ci bash .repo/ci/scripts/run-linters.sh

      - name: 📎 Upload Linter Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: |
            artifacts/asciidoc.log
            artifacts/openapi.log
            artifacts/vale.log

      - name: 💬 Post summary comment to PR
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-lint
          message: |
            ## 🧩 Docs-as-Code CI Results

            - AsciiDoc: See `artifacts/asciidoc.log`
            - Vale: See `artifacts/vale.log`
            - Spectral: See `artifacts/openapi.log`

  # ─────────────────────────────────────────────
  # 2️⃣ Генерация и публикация на GitHub Pages
  # ─────────────────────────────────────────────
  deploy-docs:
    name: 🌐 Build & Deploy Docs to GitHub Pages
    runs-on: ubuntu-latest
    needs: docs-validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Build doctoolchain image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile.doctoolchain
          load: true
          tags: docs-dtc:ci

      - name: 🏗️ Generate HTML
        run: |
          docker run --rm -v "$PWD":/project -w /project docs-dtc:ci \
            doctoolchain . generateHTML

      - name: ✅ Verify HTML output
        run: |
          if [ ! -f build/html5/index.html ]; then
            echo "❌ index.html not found!"
            ls -la build/ || echo "build/ is empty"
            exit 1
          fi

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/html5
