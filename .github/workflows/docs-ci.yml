name: 🧱 Docs-as-Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      - name: 🚀 Run Docs-as-Code Validation
        id: run_linters
        shell: bash
        run: |
          echo "🔧 Collecting changed files..."
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "📦 Mode: Pull Request"
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(md|adoc|ya?ml)$' || true)
          else
            echo "📦 Mode: Push"
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '\.(md|adoc|ya?ml)$' || true)
          fi

          echo "$CHANGED_FILES"
          if [ -z "$CHANGED_FILES" ]; then
            echo "✅ No documentation changes detected."
            exit 0
          fi

          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            -e CHANGED_FILES="$CHANGED_FILES" \
            docs-cli:ci bash .repo/ci/scripts/run-linters.sh

      - name: 📎 Upload Linter Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: artifacts/

      - name: 🧾 Prepare short linter summaries
        id: summarize
        shell: bash
        run: |
          summarize_log() {
            local file="$1"
            local title="$2"
            if [[ -f "$file" && -s "$file" ]]; then
              echo "**${title}**"
              echo '```text'
              head -n 50 "$file"
              echo '```'
              echo ""
            else
              echo "**${title}**"
              echo "_No results or file missing_"
              echo ""
            fi
          }

          {
            echo "## 🧩 Docs-as-Code CI Results"
            summarize_log artifacts/markdownlint.log "Markdown"
            summarize_log artifacts/asciidoc.log "AsciiDoc"
            summarize_log artifacts/openapi.log "OpenAPI"
            summarize_log artifacts/vale.log "Vale"
          } > summary.md

      - name: 💬 Post summary comment to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-lint
          path: summary.md
          append: false
          recreate: true
          delete: false
          hide_classify: OUTDATED
