# ==============================================================
# üìò Docs-as-Code CI
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏ Pull Request –≤ main
#
# –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
# - —Å–æ–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä docs-cli:ci (–µ–¥–∏–Ω–∞—è —Å—Ä–µ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–æ–≤)
# - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (Markdown, AsciiDoc, YAML)
# - –ø—É–±–ª–∏–∫—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ PR –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–≥–∏
#
# –†–∞–±–æ—Ç–∞–µ—Ç –≤ soft mode ‚Äî CI –Ω–µ "–ø–∞–¥–∞–µ—Ç" –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö,
# –Ω–æ –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏ –≤ PR.
# ==============================================================

name: Docs-as-Code CI

on:
  pull_request:
    branches: [ "main" ]  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ PR –≤ main

jobs:
  lint-docs:
    runs-on: ubuntu-latest
    name: "Run Docs Linters"

    steps:
      # ---------------------------------------------------------
      # 1Ô∏è‚É£ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      # ---------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------------------------------------------------
      # 2Ô∏è‚É£ –°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –ª–∏–Ω—Ç–µ—Ä–∞–º–∏ (Dockerfile –ª–µ–∂–∏—Ç –≤ .repo)
      # ---------------------------------------------------------
      - name: Build docs-cli container
        run: docker build -t docs-cli:ci -f .repo/Dockerfile .

      # ---------------------------------------------------------
      # 3Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–º PR
      # (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è–ª–∏ —Ç–æ–ª—å–∫–æ –∏—Ö)
      # ---------------------------------------------------------
      - name: Detect changed files
        id: changed
        run: |
          echo "CHANGED_FILES=$(git diff --name-only origin/main...HEAD | xargs)" >> "$GITHUB_ENV"

      # ---------------------------------------------------------
      # 4Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      # –°–∫—Ä–∏–ø—Ç run-linters.sh –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
      #   - Markdown (markdownlint, mdformat)
      #   - AsciiDoc (asciidoctor)
      #   - OpenAPI (Spectral)
      #   - Style & —Ç–µ—Ä–º–∏–Ω—ã (Vale)
      # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ /artifacts/
      # ---------------------------------------------------------
      - name: Run linters inside container
        run: |
          docker run --rm -v "$(pwd):/work" docs-cli:ci \
            bash -lc ".repo/ci/scripts/run-linters.sh"

      # ---------------------------------------------------------
      # 5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã CI
      # (–º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –∏ –∏–∑—É—á–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
      # ---------------------------------------------------------
      - name: Collect artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-lint-logs
          path: artifacts/

      # ---------------------------------------------------------
      # 6Ô∏è‚É£ –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–æ–≥–æ–≤, —á—Ç–æ–±—ã –≤—Å—Ç–∞–≤–∏—Ç—å –∏—Ö –≤ PR-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      # (–≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 200 —Å—Ç—Ä–æ–∫ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞)
      # ---------------------------------------------------------
      - name: Prepare PR comment (read logs)
        id: read_logs
        run: |
          read_log() {
            if [ -f "$1" ]; then
              head -n 200 "$1"
            else
              echo "‚ö†Ô∏è No log found: $1"
            fi
          }

          echo "Reading markdownlint..."
          md_block="$(read_log artifacts/markdownlint.log)"
          echo "markdownlint<<EOF" >> "$GITHUB_OUTPUT"
          echo "$md_block" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "Reading asciidoc..."
          adoc_block="$(read_log artifacts/asciidoc.log)"
          echo "asciidoc<<EOF" >> "$GITHUB_OUTPUT"
          echo "$adoc_block" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "Reading openapi..."
          openapi_block="$(read_log artifacts/openapi.log)"
          echo "openapi<<EOF" >> "$GITHUB_OUTPUT"
          echo "$openapi_block" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "Reading vale..."
          vale_block="$(read_log artifacts/vale.log)"
          echo "vale<<EOF" >> "$GITHUB_OUTPUT"
          echo "$vale_block" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      # ---------------------------------------------------------
      # 7Ô∏è‚É£ –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ª–∏–Ω—Ç–∏–Ω–≥–∞ –≤ PR
      #   - markdownlint
      #   - asciidoc
      #   - openapi
      #   - vale
      # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è sticky-–ø–ª–∞–≥–∏–Ω (–æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π,
      # –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã–π –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø—Ä–æ–≥–æ–Ω–µ)
      # ---------------------------------------------------------
      - name: Comment lint results on PR
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-lint
          message: |
            ## üß© Docs-as-Code CI Results

            **Markdown**
            ```text
            ${{ steps.read_logs.outputs.markdownlint }}
            ```

            **AsciiDoc**
            ```text
            ${{ steps.read_logs.outputs.asciidoc }}
            ```

            **OpenAPI**
            ```text
            ${{ steps.read_logs.outputs.openapi }}
            ```

            **Vale**
            ```text
            ${{ steps.read_logs.outputs.vale }}
            ```
