name: 🧱 Docs-as-Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write     # нужно для публикации на GitHub Pages
  pages: write
  id-token: write

jobs:
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name == 'pull_request' }}

    steps:
      # ─────────────────────────────────────────────
      # 1️⃣ Клонируем репозиторий
      # ─────────────────────────────────────────────
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ─────────────────────────────────────────────
      # 2️⃣ Подготавливаем Docker окружение
      # ─────────────────────────────────────────────
      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      # ─────────────────────────────────────────────
      # 3️⃣ Определяем изменённые файлы и запускаем линтеры
      # ─────────────────────────────────────────────
      - name: 🚀 Run Docs-as-Code Validation
        id: run_linters
        shell: bash
        run: |
          echo "🔧 Collecting changed files..."

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(md|adoc|ya?ml)$' || true)
          else
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '\.(md|adoc|ya?ml)$' || true)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "✅ No documentation changes detected."
            exit 0
          fi

          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            -e CHANGED_FILES="$CHANGED_FILES" \
            docs-cli:ci bash .repo/ci/scripts/run-linters.sh

      # ─────────────────────────────────────────────
      # 4️⃣ Публикуем отчёты артефактов (для PR)
      # ─────────────────────────────────────────────
      - name: 📎 Upload Linter Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: artifacts/

      # ─────────────────────────────
      # 5️⃣ Формируем краткий отчёт в PR
      # ─────────────────────────────
      - name: 💬 Post summary comment to PR
        if: github.event_name == 'pull_request'
        run: |
          if [ -f summary.md ]; then
            echo "content<<EOF" >> "$GITHUB_OUTPUT"
            cat summary.md >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          else
            echo "content=⚠️ Summary not found." >> "$GITHUB_OUTPUT"
          fi
        id: read_summary

      - name: 💬 Post comment using sticky action
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-lint
          message: ${{ steps.read_summary.outputs.content }}

  # ─────────────────────────────────────────────
  # 6️⃣ Сборка и публикация документации (только при пуше в main)
  # ─────────────────────────────────────────────
  docs-publish:
    name: 🌐 Build & Deploy Docs to GitHub Pages
    runs-on: ubuntu-latest
    needs: docs-validate
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile
          load: true
          tags: docs-cli:ci

      - name: 🧱 Generate HTML via Doctoolchain
        run: |
          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            docs-cli:ci doctoolchain . generateHTML -PconfigFile=.repo/config/docToolchainConfig.groovy

      - name: ✅ Verify HTML output
        run: |
          if [ ! -f build/docs/html5/index.html ]; then
            echo "❌ HTML generation failed!"
            exit 1
          fi

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/docs/html5
          commit_message: "🚀 Publish docs [skip ci]"