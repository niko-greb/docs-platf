name: 🧱 Docs-as-Code CI (Soft Mode)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: true  # CI не падает при ошибках

    steps:
      # ─────────────────────────────────────────────
      # 1️⃣ Checkout & Docker Build
      # ─────────────────────────────────────────────
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      # ─────────────────────────────────────────────
      # 2️⃣ Markdown Validation
      # ─────────────────────────────────────────────
      - name: 🧾 Run Markdown Linter (non-blocking)
        run: |
          echo "🧾 Running Markdown Linter..."
          docker run --rm -v "$PWD":/work -w /work docs-cli:ci \
            bash -c "markdownlint-cli2 '**/*.md' '#node_modules' --format markdown" \
            | tee "${{ github.workspace }}/docs-quality.log" || true
          
          echo "📋 Lint Summary:"
          cat "${{ github.workspace }}/docs-quality.log" || echo "⚠️ No lint output generated"



      # ─────────────────────────────────────────────
      # 3️⃣ AsciiDoc Validation
      # ─────────────────────────────────────────────
      - name: 🏗️ Validate AsciiDoc files
        continue-on-error: true
        run: |
          echo "🏗️ Running AsciiDoctor Doctest..."
          docker run --rm -v "$PWD":/work -w /work docs-cli:ci bash -lc '
            echo "📄 Checking for AsciiDoc files..."
            FILES=$(find . -type f -name "*.adoc" | wc -l)
            if [ "$FILES" -eq 0 ]; then
              echo "⚠️ No AsciiDoc files found — skipping"
              exit 0
            fi
            echo "🧱 Found $FILES AsciiDoc files. Running doctest..."
            find . -type f -name "*.adoc" -print0 | xargs -0 -n1 asciidoctor-doctest 2>&1 | tee -a docs-quality.log || true
          '

      # ─────────────────────────────────────────────
      # 4️⃣ OpenAPI Validation
      # ─────────────────────────────────────────────
      - name: 🔍 Validate OpenAPI specs
        continue-on-error: true
        run: |
          echo "🔍 Running Spectral OpenAPI checks..."
          docker run --rm -v "$PWD":/work -w /work docs-cli:ci bash -lc '
            echo "📄 Checking for YAML/YML OpenAPI specs..."
            FILES=$(find . -type f \( -name "*.yaml" -o -name "*.yml" \) | wc -l)
            if [ "$FILES" -eq 0 ]; then
              echo "⚠️ No YAML files found — skipping"
              exit 0
            fi
            echo "📜 Found $FILES YAML files. Running Spectral..."
            find . -type f \( -name "*.yaml" -o -name "*.yml" \) -print0 | xargs -0 -n1 spectral lint --quiet 2>&1 | tee -a docs-quality.log || true
          '

      # ─────────────────────────────────────────────
      # 5️⃣ Style (Vale)
      # ─────────────────────────────────────────────
      - name: ✍️ Run Vale style checks
        continue-on-error: true
        run: |
          echo "✍️ Running Vale Style Checker..."
          docker run --rm -v "$PWD":/work -w /work docs-cli:ci bash -lc '
            echo "📄 Checking for text files..."
            FILES=$(find . -type f \( -name "*.md" -o -name "*.adoc" \) | wc -l)
            if [ "$FILES" -eq 0 ]; then
              echo "⚠️ No documentation files found — skipping"
              exit 0
            fi
            echo "✍️ Running Vale on $FILES files..."
            vale --output=line --minAlertLevel=warning . 2>&1 | tee -a docs-quality.log || true
          '

      # ─────────────────────────────────────────────
      # 6️⃣ Reporting
      # ─────────────────────────────────────────────
      - name: 📊 Summarize results
        if: always()
        run: |
          echo ""
          echo "✅ All linters executed (soft mode)."
          echo "Check docs-quality.log artifact for warnings and style notes."

      - name: 📦 Upload docs quality report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: docs-quality.log
          if-no-files-found: warn

      - name: 💬 Comment in Pull Request
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-quality
          message: |
            🧩 **Docs-as-Code Check Complete**
            ✅ All checks executed in soft mode.
            ⚠️ Please review warnings in **Actions → Docs-as-Code CI** or download the artifact `docs-quality-report`.
