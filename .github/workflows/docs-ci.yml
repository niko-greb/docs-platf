name: 🧱 Docs-as-Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  # ─────────────────────────────────────────────
  # 1️⃣ Проверка документации
  # ─────────────────────────────────────────────
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      - name: 🚀 Run Docs-as-Code Validation
        run: |
          echo "🔧 Collecting changed files..."
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "📦 Mode: Pull Request"
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(md|adoc|ya?ml)$' || true)
          else
            echo "📦 Mode: Push"
            CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '\.(md|adoc|ya?ml)$' || true)
          fi

          echo "$CHANGED_FILES"
          if [ -z "$CHANGED_FILES" ]; then
            echo "✅ No documentation changes detected."
            exit 0
          fi

          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            -e CHANGED_FILES="$CHANGED_FILES" \
            docs-cli:ci bash .repo/ci/scripts/run-linters.sh

      - name: 📎 Upload Linter Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: artifacts/

  # ─────────────────────────────────────────────
  # 2️⃣ Генерация и публикация на GitHub Pages
  # ─────────────────────────────────────────────
  deploy-docs:
    name: 🌐 Build & Deploy Docs to GitHub Pages
    runs-on: ubuntu-latest
    needs: docs-validate
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Load existing docs-cli image (cached)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .repo/Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      - name: 🧰 Generate documentation via Doctoolchain
        run: |
          mkdir -p build-html
          docker run --rm -v "$PWD":/work -w /work docs-cli:ci \
            bash -lc "doctoolchain . generateHTML -PconfigFile=.repo/config/docToolchainConfig.groovy"

          echo "✅ Documentation generated in build-html/"
          ls -R build-html

      - name: 🚚 Move index.html to root
        run: |
          if [ -f build-html/index.html ]; then
            mv build-html/index.html .
          fi

      - name: 🌍 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build-html
          publish_branch: gh-pages
          cname: ""
