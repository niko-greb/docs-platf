name: 🧱 Docs-as-Code CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  docs-validate:
    name: 🧩 Validate Documentation
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      # ───────────────────────────────────────────────
      # 1️⃣ Checkout & Build Docker Image
      # ───────────────────────────────────────────────
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build docs-cli image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: docs-cli:ci

      # ───────────────────────────────────────────────
      # 2️⃣ Markdownlint
      # ───────────────────────────────────────────────
      - name: 🧾 Run Markdown Linter
        run: |
          mkdir -p artifacts
          docker run --rm \
            -v "${{ github.workspace }}/docs":/docs \
            docs-cli:ci bash -lc '
              cd /docs
              echo "📂 Checking Markdown files in $(pwd)"
              markdownlint-cli2 "**/*.md" "#node_modules" --format markdown || true
            ' | tee artifacts/markdownlint.log

      # ───────────────────────────────────────────────
      # 3️⃣ Asciidoctor
      # ───────────────────────────────────────────────
      - name: 🏗️ Validate AsciiDoc
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/docs":/docs \
            docs-cli:ci bash -lc '
              FILES=$(find /docs -type f -name "*.adoc" | wc -l)
              if [ "$FILES" -eq 0 ]; then
                echo "⚠️ No AsciiDoc files found"
                exit 0
              fi
              find /docs -type f -name "*.adoc" -print0 | xargs -0 -n1 asciidoctor-doctest || true
            ' | tee -a artifacts/asciidoc.log

      # ───────────────────────────────────────────────
      # 4️⃣ Spectral (OpenAPI)
      # ───────────────────────────────────────────────
      - name: 🔍 Validate OpenAPI specs
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/docs":/docs \
            docs-cli:ci bash -lc '
              FILES=$(find /docs -type f \( -name "*.yaml" -o -name "*.yml" \) | wc -l)
              if [ "$FILES" -eq 0 ]; then
                echo "⚠️ No OpenAPI specs found"
                exit 0
              fi
              find /docs -type f \( -name "*.yaml" -o -name "*.yml" \) -print0 | xargs -0 -n1 spectral lint --quiet || true
            ' | tee -a artifacts/openapi.log

      # ───────────────────────────────────────────────
      # 5️⃣ Vale Style
      # ───────────────────────────────────────────────
      - name: ✍️ Run Vale style checks
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/docs":/docs \
            docs-cli:ci bash -lc '
              vale --output=line --minAlertLevel=warning /docs || true
            ' | tee -a artifacts/vale.log

      # ───────────────────────────────────────────────
      # 6️⃣ Merge & Report
      # ───────────────────────────────────────────────
      - name: 📊 Merge results
        if: always()
        run: |
          mkdir -p artifacts
          cat artifacts/*.log > artifacts/docs-quality.log || true

      - name: 📎 Upload Linter Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-quality-report
          path: artifacts/docs-quality.log

      - name: ⚠️ Show GitHub Summary
        if: always()
        run: |
          echo "## 🧾 Documentation Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          grep -E "MD|Vale|WARN|ERROR|Error|warning|Spectral" artifacts/docs-quality.log || echo "✅ No warnings found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      # ───────────────────────────────────────────────
      # 7️⃣ PR Comment
      # ───────────────────────────────────────────────
      - name: 💬 Comment Results in PR
        if: always() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: docs-ci-report
          message: |
            🧾 **Documentation CI Report**
            ```
            $(cat artifacts/docs-quality.log || echo "✅ No warnings found")
            ```
