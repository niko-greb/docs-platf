#!/bin/bash
# create-project.sh ‚Äî —Å–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É docs –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

PROJECT_NAME=$1
MODULES=${@:2}  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: Restaurants Addresses

if [ -z "$PROJECT_NAME" ]; then
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./create-project.sh <–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–æ–µ–∫—Ç–∞> [–º–æ–¥—É–ª—å1] [–º–æ–¥—É–ª—å2]..."
  exit 1
fi

TARGET_DIR="docs/$PROJECT_NAME"

if [ -d "$TARGET_DIR" ]; then
  echo "‚ùå –ü–∞–ø–∫–∞ $TARGET_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
  exit 1
fi

echo "üöÄ –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_NAME"

mkdir -p "$TARGET_DIR/api/schemas/errors"
mkdir -p "$TARGET_DIR/shared"
touch "$TARGET_DIR/accesses.md"
touch "$TARGET_DIR/shared/glossary.md"

# –û—à–∏–±–∫–∏ API
touch "$TARGET_DIR/api/schemas/OrderResponse.adoc"
touch "$TARGET_DIR/api/schemas/Dish.adoc"

# API endpoints (–ø—Ä–∏–º–µ—Ä)
cat << EOF > "$TARGET_DIR/api/$PROJECT_NAME/v7/GET_api_v7_restaurants.yml"
# Endpoint: GET /api/v7/restaurants
summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
responses:
  '200':
    description: OK
EOF

# –ú–æ–¥—É–ª–∏ –≤ requirements
for MODULE in $MODULES; do
  MOD_LC=$(echo "$MODULE" | awk '{print tolower($0)}')
  mkdir -p "$TARGET_DIR/requirements/$MODULE"
  mkdir -p "$TARGET_DIR/requirements/$MODULE/UseCases"
  mkdir -p "$TARGET_DIR/requirements/$MODULE/Images"
  mkdir -p "$TARGET_DIR/requirements/$MODULE/Diagrams"
  mkdir -p "$TARGET_DIR/requirements/$MODULE/Database"
  touch "$TARGET_DIR/requirements/$MODULE/$MODULE.adoc"
done

echo "‚úÖ –ü—Ä–æ–µ–∫—Ç '$PROJECT_NAME' —Å–æ–∑–¥–∞–Ω: $TARGET_DIR"
echo "üí° –û—Ç–∫—Ä–æ–π—Ç–µ –≤ VS Code: code $PROJECT_NAME"

# --- –°–æ–∑–¥–∞–Ω–∏–µ README.md ---
cat << EOF > "$TARGET_DIR/../README.md"
# üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: $PROJECT_NAME

> –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ **$PROJECT_NAME**

---

## üóÇÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

\`\`\`
docs/
‚îú‚îÄ‚îÄ api/                  # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ API
‚îÇ   ‚îú‚îÄ‚îÄ schemas/          # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
‚îÇ   ‚îî‚îÄ‚îÄ $PROJECT_NAME/    # –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã
‚îú‚îÄ‚îÄ requirements/         # –ë–∏–∑–Ω–µ—Å-—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ {–º–æ–¥—É–ª—å}/         # –ù–∞–ø—Ä–∏–º–µ—Ä: Restaurants, Addresses
‚îú‚îÄ‚îÄ accesses.md           # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
‚îî‚îÄ‚îÄ shared/               # –û–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
    ‚îî‚îÄ‚îÄ glossary.md       # –ì–ª–æ—Å—Å–∞—Ä–∏–π —Ç–µ—Ä–º–∏–Ω–æ–≤
\`\`\`

---

## üîó –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã

- [API](api/$PROJECT_NAME/v7/GET_api_v7_restaurants.yml) ‚Äî —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
- [–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è](requirements/) ‚Äî –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏
- [–ì–ª–æ—Å—Å–∞—Ä–∏–π](shared/glossary.md) ‚Äî –æ–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã

---

## üÜò –ö–∞–∫ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è?

1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª.
2. –°–æ–∑–¥–∞–π—Ç–µ Pull Request –≤ `main`.
3. –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫.

> üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω—ã –≤ \`/docs/shared/templates/\`.

---

_–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: $(date +%Y-%m-%d)_
EOF

echo "üìÑ –°–æ–∑–¥–∞–Ω–æ: $TARGET_DIR/../README.md"