stages:
  - build
  - lint
  - report

# ─────────────────────────────────────────────
# 1️⃣ BUILD: собрать образ (docs-cli)
# ─────────────────────────────────────────────
build-docs-cli:
  stage: build
  image: docker:27.0.3
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - echo "🏗️ Building docs-cli image..."
    - docker build -t docs-cli:ci .
  artifacts:
    expire_in: 1 day
    paths:
      - docs-quality.log
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"'

# ─────────────────────────────────────────────
# 2️⃣ LINT: Markdown
# ─────────────────────────────────────────────
lint-markdown:
  stage: lint
  image: docker:27.0.3
  services:
    - docker:dind
  needs: [build-docs-cli]
  script:
    - echo "🧾 Running Markdown Linter..."
    - docker run --rm -v "$CI_PROJECT_DIR":/work -w /work docs-cli:ci bash -lc '
        echo "📂 Current dir:" && pwd &&
        echo "📄 Searching for Markdown files..." &&
        FILES=$(find . -type f -name "*.md" | wc -l) &&
        if [ "$FILES" -eq 0 ]; then echo "⚠️ No Markdown files found — skipping"; exit 0; fi &&
        echo "🧾 Found $FILES Markdown files. Running markdownlint..." &&
        markdownlint-cli2 "**/*.md" "#node_modules" --format markdown | tee -a docs-quality.log || true'
  allow_failure: true
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - docs-quality.log

# ─────────────────────────────────────────────
# 3️⃣ LINT: AsciiDoc
# ─────────────────────────────────────────────
lint-asciidoc:
  stage: lint
  image: docker:27.0.3
  services:
    - docker:dind
  needs: [build-docs-cli]
  script:
    - echo "🏗️ Running AsciiDoctor Doctest..."
    - docker run --rm -v "$CI_PROJECT_DIR":/work -w /work docs-cli:ci bash -lc '
        FILES=$(find . -type f -name "*.adoc" | wc -l) &&
        if [ "$FILES" -eq 0 ]; then echo "⚠️ No AsciiDoc files found — skipping"; exit 0; fi &&
        echo "🧱 Found $FILES AsciiDoc files. Running doctest..." &&
        find . -type f -name "*.adoc" -print0 | xargs -0 -n1 asciidoctor-doctest 2>&1 | tee -a docs-quality.log || true'
  allow_failure: true
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - docs-quality.log

# ─────────────────────────────────────────────
# 4️⃣ LINT: OpenAPI (Spectral)
# ─────────────────────────────────────────────
lint-openapi:
  stage: lint
  image: docker:27.0.3
  services:
    - docker:dind
  needs: [build-docs-cli]
  script:
    - echo "🔍 Running Spectral OpenAPI checks..."
    - docker run --rm -v "$CI_PROJECT_DIR":/work -w /work docs-cli:ci bash -lc '
        FILES=$(find . -type f \( -name "*.yaml" -o -name "*.yml" \) | wc -l) &&
        if [ "$FILES" -eq 0 ]; then echo "⚠️ No YAML files found — skipping"; exit 0; fi &&
        echo "📜 Found $FILES YAML files. Running Spectral..." &&
        find . -type f \( -name "*.yaml" -o -name "*.yml" \) -print0 | xargs -0 -n1 spectral lint --quiet 2>&1 | tee -a docs-quality.log || true'
  allow_failure: true
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - docs-quality.log

# ─────────────────────────────────────────────
# 5️⃣ LINT: Vale
# ─────────────────────────────────────────────
lint-vale:
  stage: lint
  image: docker:27.0.3
  services:
    - docker:dind
  needs: [build-docs-cli]
  script:
    - echo "✍️ Running Vale Style Checker..."
    - docker run --rm -v "$CI_PROJECT_DIR":/work -w /work docs-cli:ci bash -lc '
        FILES=$(find . -type f \( -name "*.md" -o -name "*.adoc" \) | wc -l) &&
        if [ "$FILES" -eq 0 ]; then echo "⚠️ No documentation files found — skipping"; exit 0; fi &&
        vale --output=line --minAlertLevel=warning . 2>&1 | tee -a docs-quality.log || true'
  allow_failure: true
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - docs-quality.log

# ─────────────────────────────────────────────
# 6️⃣ REPORT: сводный отчёт
# ─────────────────────────────────────────────
docs-summary:
  stage: report
  image: alpine:latest
  needs:
    - lint-markdown
    - lint-asciidoc
    - lint-openapi
    - lint-vale
  script:
    - echo "📊 Soft validation complete. Review warnings in attached artifact docs-quality.log."
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - docs-quality.log
  allow_failure: true
